{"mappings":"C,A,WCEA,IOF+B,EAAK,EPE9B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAa,SAAS,aAAa,CAAC,eACpC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAS,SAAS,aAAa,CAAC,WAEhC,EAAe,MAAM,IAAI,CAC7B,CAAE,OAAQ,EAAU,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,AAAC,EAC3C,WAAM,OAAA,MAAM,EAAU,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,E,G,E,C,EGX9D,SAAS,EAA0B,CAAQ,CAAE,CAAU,CAAE,CAAE,EACvD,GAAI,CAAC,EAAW,GAAG,CAAC,GAAW,MAAM,AAAI,UAAU,kDAEnD,OAAO,CACX,CCFA,SAAS,EAA2B,CAAG,CAAE,CAAU,GAC/C,AAAA,SCHkC,CAAG,CAAE,CAAiB,EACxD,GAAI,EAAkB,GAAG,CAAC,GACtB,MAAM,AAAI,UAAU,iEAE5B,EDDiC,EAAK,GAClC,EAAW,GAAG,CAAC,EACnB,CMLA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,AAAA,SCJmB,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AAAA,SGNZ,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AAAA,SKJ3B,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AAAA,WILtG,MAAM,AAAI,UAAU,uIACxB,GJKA,CPgLE,IAAA,EAAA,WAAA,EAAA,IAAA,QAQA,EAAA,WAAA,EAAA,IAAA,QAcA,EAAA,WAAA,EAAA,IAAA,QAYA,EAAA,WAAA,EAAA,IAAA,QAIA,EAAA,WAAA,EAAA,IAAA,QAyCA,EAAA,WAAA,EAAA,IAAA,QAUA,EAAA,WAAA,EAAA,IAAA,QAMA,EAAA,WAAA,EAAA,IAAA,QA8BA,EA7HA,WAAA,EAAA,IAAA,QArLI,EAAA,WAAA,EAAN,eKSoC,ELT9B,SAAA,IASF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACD,EAAA,UAAA,MAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,KAAA,EACA,EAFC,UAAA,MAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,KAAA,GAdC,AAAA,SCFqB,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GAqLJ,AAAA,EAAA,IAAA,CAAA,GAQA,AAAA,EAAA,IAAA,CAAA,GAcA,AAAA,EAAA,IAAA,CAAA,GAYA,AAAA,EAAA,IAAA,CAAA,GAIA,AAAA,EAAA,IAAA,CAAA,GAyCA,AAAA,EAAA,IAAA,CAAA,GAUA,AAAA,EAAA,IAAA,CAAA,GAMA,AAAA,EAAA,IAAA,CAAA,GA8BA,AAAA,EAAA,IAAA,CAAA,GAhSE,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,KAAK,CAAG,EAAa,GAAG,CAAC,SAAC,CAA/B,EAAwC,OAAA,AAAA,EAAG,E,GAC3C,IAAI,CAAC,MAAM,CApBT,EAoBiB,QAAQ,CAAC,IAAI,CAChC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,SAAS,CAAG,EACjB,IAAI,CAAC,UAAU,CAAG,C,CAvBhB,OKS8B,ELT9B,C,CA0BJ,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAvCT,EAuCiB,QAAQ,CAAC,OAAO,CACnC,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EACJ,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CACN,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAChD,IAAI,CAAC,MAAM,CA9CT,EA8CiB,QAAQ,CAAC,IAAI,CAChC,IAAI,CAAC,KAAK,CAAG,CACf,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,MAAM,GAnDb,EAmDuB,QAAQ,CAAC,OAAO,EAIzC,IAAI,EAAqB,CAAA,CAEzB,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,SACE,AAAK,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAI1B,EAAqB,CAAA,EAEd,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAiB,IALrB,CAMX,GAEI,GACF,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAGN,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EACN,C,E,CAEA,IAAA,YAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,MAAM,GA3Eb,EA2EuB,QAAQ,CAAC,OAAO,EAIzC,IAAI,EAAsB,CAAA,CAE1B,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,EACE,IAAM,EAAe,AAAA,EAAG,GAAK,OAAO,UAEpC,AAAK,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAI1B,EAAsB,CAAA,EAEf,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAiB,GAAa,OAAO,IALzC,CAMX,GAEI,GACF,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAGN,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EACN,C,E,CAEA,IAAA,SAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,MAAM,GArGb,EAqGuB,QAAQ,CAAC,OAAO,EAIzC,IAAI,EAAmB,CAAA,EAIjB,EAA6B,AAFP,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAAY,IAAI,CAAC,KAAK,EAEC,GAAG,CAAC,SAAC,CAA5D,SACE,AAAK,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAI1B,EAAmB,CAAA,EAEZ,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAiB,IALrB,CAMX,EAEA,CAAA,IAAI,CAAC,KAAK,CAAG,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAAY,GAEzB,GACF,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAGN,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EACN,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,MAAM,GAjIb,EAiIuB,QAAQ,CAAC,OAAO,EAIzC,IAAI,EAAqB,CAAA,EAInB,EAA6B,AAFP,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAAY,IAAI,CAAC,KAAK,EAEC,GAAG,CAAC,SAAC,CAA5D,EACE,IAAM,EAAe,AAAA,EAAG,GAAK,OAAO,UAEpC,AAAK,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAI1B,EAAqB,CAAA,EAEd,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAiB,GAAa,OAAO,IALzC,CAMX,EAEA,CAAA,IAAI,CAAC,KAAK,CAAG,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAAY,GAEzB,GACF,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAGN,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EACN,C,E,CAEA,IAAA,kBAAA,MAAA,WACE,IAAM,EAAQ,kBACR,EAAY,IAAI,CAAC,QAAQ,EAE/B,CAAA,IAAI,CAAC,UAAU,CAAC,SAAS,CAAG,IAAI,CAAC,QAAQ,GAEzC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IAChC,AAAoB,IAApB,CAAS,CAAC,EAAE,CAAC,EAAE,EACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CACvC,0BAA0C,MAAA,CAAhB,CAAS,CAAC,EAAE,CAAC,EAAE,EAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAG,CAAS,CAAC,EAAE,CAAC,EAAE,EAEvC,IAApB,CAAS,CAAC,EAAE,CAAC,EAAE,EACf,EAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,IAEpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAG,aAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAG,GAIpD,C,E,CKzKkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,ALVhC,EKU4C,SAAS,CAAE,GLVvD,C,IAqLJ,SAAA,IACE,IAAM,EAAQ,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAEJ,QAAV,GACF,CAAA,IAAI,CAAC,KAAK,CAAC,CAAK,CAAC,EAAE,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CAAA,CAE/D,CAEA,SAAA,IAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAW,IAAI,CAAC,CAAC,EAAG,EAAE,EAK5B,OAAO,CACT,CAEA,SAAA,IACE,IAAM,EAAa,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAEvB,GAAI,EAAW,MAAM,CAAG,EACtB,OAAO,KAGT,IAAM,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAEhE,OAAO,CAAU,CAAC,EAAY,AAChC,CAEA,SAAA,EAAW,CAAG,EACZ,OAAO,CAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAC,CAAA,CAAG,CAAtB,EAAmC,OAAA,EAAI,GAAG,CAAC,SAAC,CAAT,EAAiB,OAAA,CAAG,CAAC,EAAS,A,E,EACnE,CAEA,SAAA,EAAkB,CAAK,EAGrB,IAAK,IAFC,EAAe,CAAC,EAAG,EAAG,EAAG,EAAE,CAExB,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAChC,GAAI,AAAa,IAAb,CAAK,CAAC,EAAE,EAQZ,IAJA,IAAM,EAAmB,EACrB,EAAkB,KAClB,EAAI,EAAI,EAGV,GAAK,GACJ,CAAA,AAAa,IAAb,CAAK,CAAC,EAAE,EACN,CAAK,CAAC,EAAE,GAAK,CAAK,CAAC,EAAiB,EAAI,AAAoB,IAApB,CAAY,CAAC,EAAE,AAAK,GAE/D,EAAkB,EAClB,GAGsB,QAApB,IAIA,AAA2B,IAA3B,CAAK,CAAC,EAAgB,EACxB,CAAK,CAAC,EAAgB,CAAG,CAAK,CAAC,EAAiB,CAChD,CAAK,CAAC,EAAiB,CAAG,IAE1B,CAAK,CAAC,EAAgB,EAAI,CAAK,CAAC,EAAiB,CACjD,CAAK,CAAC,EAAiB,CAAG,EAE1B,CAAY,CAAC,EAAgB,CAAG,EAEhC,IAAI,CAAC,KAAK,EAAI,CAAK,CAAC,EAAgB,GAIxC,OAAO,CACT,CAEA,SAAA,IACO,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,GACP,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,QAAQ,CAAC,IAAI,AAAJ,EAG1B,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,GACN,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,QAAQ,CAAC,GAAG,AAAH,CAEhC,CAEA,SAAA,IACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAC,CAAxB,EACE,OAAO,EAAI,IAAI,CAAC,SAAC,CAAjB,EAA0B,OAAA,AAAS,OAAT,C,EAC5B,EACF,CAEA,SAAA,I,I,E,I,CAGE,GAAI,AAFe,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,EAER,MAAM,EAAI,EACvB,MAAO,CAAA,EAGT,IAAM,EAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAC,CAA3C,EACE,IAAM,EAAe,AAAA,EAAG,WAEpB,CAAA,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAAQ,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,EAAA,CAKxD,GAEM,EAAkB,AAAA,EAAA,IAAI,CAAE,EAAA,GAAA,IAAA,CAAN,IAAI,CAAY,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAC,CAA1D,EACE,IAAM,EAAe,AAAA,EAAG,WAEpB,CAAA,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,IAAQ,AAAA,EAAA,EAAM,EAAA,GAAA,IAAA,CAAA,EAAe,EAAA,CAKxD,GAEA,OAAO,GAAqB,CAC9B,CAEA,SAAA,EAAgB,CAAK,EACnB,OAAO,EAAM,IAAI,CAAC,SAAC,CAAA,CAAM,CAAzB,SACE,AAAc,IAAV,GAIA,AAAS,IAAT,IAIqB,IAArB,CAAK,CAAC,EAAQ,EAAE,EAIhB,CAAK,CAAC,EAAM,GAAK,CAAK,CAAC,EAAQ,EAAE,CAKvC,EACF,CMxUkC,ENGhB,CAChB,KAAM,OACN,QAAS,UACT,IAAK,MACL,KAAM,MACR,EMPM,CADuB,ENGtB,cADH,EMAE,OAAO,cAAc,CNAvB,EMA6B,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,ANDL,CMCQ,CAAC,EAAI,CAAG,EPYtB,IAAM,EAAO,GC4Tb,CAAA,EAAiB,CAAjB,ED5TsB,EAAc,EAAU,OAAO,CAAC,EAAE,CAAE,GA4B1D,SAAS,IA6BP,IAAI,EACA,EACA,EACA,EA/BJ,OAAO,gBAAgB,CAAC,UAAW,EAAa,CAAE,KAAM,CAAA,CAAK,GA4BzD,EAAc,EACd,EAAc,EACd,EAAY,EACZ,EAAY,EAIhB,OAAO,gBAAgB,CACrB,aACA,SAAC,CAFH,EAGI,EAAc,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAClC,EAAc,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,AACpC,EACA,CAAE,KAAM,CAAA,CAAK,GAGf,OAAO,gBAAgB,CACrB,WACA,SAAC,CAFH,EAYE,IAAM,EACA,EAVJ,EAAY,EAAE,cAAc,CAAC,EAAE,CAAC,OAAO,CACvC,EAAY,EAAE,cAAc,CAAC,EAAE,CAAC,OAAO,CAWrC,KAAK,GAAG,CAHN,EAAS,EAAY,GAGJ,KAAK,GAAG,CAFzB,EAAS,EAAY,GAGrB,EA3BU,GA4BZ,EAAK,SAAS,GACL,EAAS,KAClB,EAAK,QAAQ,GAGX,EAjCU,GAkCZ,EAAK,QAAQ,GACJ,EAAS,KAClB,EAAK,MAAM,GAIf,GAtBA,EACA,CAAE,KAAM,CAAA,CAAK,EAlDjB,CAEA,SAAS,EAAY,CAAC,EACpB,OAAQ,EAAE,GAAG,EACX,IAAK,YACH,EAAK,QAAQ,GACb,KACF,KAAK,UACH,EAAK,MAAM,GACX,KACF,KAAK,YACH,EAAK,QAAQ,GACb,KACF,KAAK,aACH,EAAK,SAAS,GACd,KACF,SACE,IAEA,MACJ,CAEA,GACF,CAoDA,SAAS,IACP,EAAK,eAAe,GAEpB,IAAM,EAAe,EAAK,SAAS,GAE/B,IAAiB,EAAK,QAAQ,CAAC,GAAG,EACpC,EAAW,SAAS,CAAC,MAAM,CAAC,UAG1B,IAAiB,EAAK,QAAQ,CAAC,IAAI,EACrC,EAAY,SAAS,CAAC,MAAM,CAAC,UAG/B,GACF,CAtHA,EAAO,gBAAgB,CAAC,QAAS,WAC3B,EAAO,SAAS,CAAC,QAAQ,CAAC,UAC5B,EAAK,KAAK,GAEV,EAAO,SAAS,CAAC,MAAM,CAAC,SACxB,EAAO,SAAS,CAAC,GAAG,CAAC,WACrB,EAAO,SAAS,CAAG,UAEnB,EAAa,SAAS,CAAC,GAAG,CAAC,WAClB,EAAO,SAAS,CAAC,QAAQ,CAAC,aACnC,EAAK,OAAO,GAEZ,EAAO,SAAS,CAAC,MAAM,CAAC,WACxB,EAAO,SAAS,CAAC,GAAG,CAAC,SACrB,EAAO,SAAS,CAAG,QAEnB,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAY,SAAS,CAAC,GAAG,CAAC,WAG5B,EAAK,eAAe,EACtB,GAEA,G","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$scoreField = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$initialState = Array.from({\n    length: $197cd56b15c33885$var$gameField.tBodies[0].rows.length\n}, function() {\n    return Array($197cd56b15c33885$var$gameField.tBodies[0].rows[0].cells.length).fill(0);\n});\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac6739cbe5bf1c84$export$71511d61b312f219(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\nfunction $f86983e96b0c893e$export$71511d61b312f219(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $ea91727f98d0802f$export$71511d61b312f219(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$_addCell = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_getEmptyCells = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_getRandomEmptyCell = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_transpose = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_moveCellsInGroup = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_setStatus = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_checkWin = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_checkCanMove = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_canMoveInGroup = /*#__PURE__*/ new WeakSet();\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ], gameBoard = arguments.length > 1 ? arguments[1] : void 0, scoreField = arguments.length > 2 ? arguments[2] : void 0;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getEmptyCells);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getRandomEmptyCell);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_moveCellsInGroup);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setStatus);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_checkWin);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_checkCanMove);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_canMoveInGroup);\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.status = Game.STATUSES.idle;\n        this.score = 0;\n        this.gameBoard = gameBoard;\n        this.scoreField = scoreField;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUSES.playing;\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.status = Game.STATUSES.idle;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== Game.STATUSES.playing) return;\n                var canMoveLeftInGroup = false;\n                this.state = this.state.map(function(row) {\n                    if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, row)) return row;\n                    canMoveLeftInGroup = true;\n                    return (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_moveCellsInGroup, $3d28d7f1aac198f5$var$moveCellsInGroup).call(_this, row);\n                });\n                if (canMoveLeftInGroup) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setStatus, $3d28d7f1aac198f5$var$setStatus).call(this);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== Game.STATUSES.playing) return;\n                var canMoveRightInGroup = false;\n                this.state = this.state.map(function(row) {\n                    var rowReversed = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                    if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, rowReversed)) return row;\n                    canMoveRightInGroup = true;\n                    return (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_moveCellsInGroup, $3d28d7f1aac198f5$var$moveCellsInGroup).call(_this, rowReversed).reverse();\n                });\n                if (canMoveRightInGroup) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setStatus, $3d28d7f1aac198f5$var$setStatus).call(this);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.status !== Game.STATUSES.playing) return;\n                var canMoveUpInGroup = false;\n                var cellsGroupByColumns = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose, $3d28d7f1aac198f5$var$transpose).call(this, this.state);\n                var updatedCellsGroupByColumns = cellsGroupByColumns.map(function(row) {\n                    if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, row)) return row;\n                    canMoveUpInGroup = true;\n                    return (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_moveCellsInGroup, $3d28d7f1aac198f5$var$moveCellsInGroup).call(_this, row);\n                });\n                this.state = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose, $3d28d7f1aac198f5$var$transpose).call(this, updatedCellsGroupByColumns);\n                if (canMoveUpInGroup) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setStatus, $3d28d7f1aac198f5$var$setStatus).call(this);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.status !== Game.STATUSES.playing) return;\n                var canMoveDownInGroup = false;\n                var cellsGroupByColumns = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose, $3d28d7f1aac198f5$var$transpose).call(this, this.state);\n                var updatedCellsGroupByColumns = cellsGroupByColumns.map(function(row) {\n                    var reversedRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                    if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, reversedRow)) return row;\n                    canMoveDownInGroup = true;\n                    return (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_moveCellsInGroup, $3d28d7f1aac198f5$var$moveCellsInGroup).call(_this, reversedRow).reverse();\n                });\n                this.state = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose, $3d28d7f1aac198f5$var$transpose).call(this, updatedCellsGroupByColumns);\n                if (canMoveDownInGroup) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_addCell, $3d28d7f1aac198f5$var$addCell).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_setStatus, $3d28d7f1aac198f5$var$setStatus).call(this);\n            }\n        },\n        {\n            key: \"updateGameBoard\",\n            value: function updateGameBoard() {\n                var regex = /field-cell--\\d+/;\n                var currState = this.getState();\n                this.scoreField.innerText = this.getScore();\n                for(var i = 0; i < currState.length; i++)for(var j = 0; j < currState.length; j++){\n                    if (currState[i][j] !== 0) {\n                        this.gameBoard.rows[i].cells[j].className = \"field-cell field-cell--\".concat(currState[i][j]);\n                        this.gameBoard.rows[i].cells[j].innerText = currState[i][j];\n                    } else if (currState[i][j] === 0 && regex.test(this.gameBoard.rows[i].cells[j].className)) {\n                        this.gameBoard.rows[i].cells[j].className = \"field-cell\";\n                        this.gameBoard.rows[i].cells[j].innerText = \"\";\n                    }\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUSES\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\nfunction $3d28d7f1aac198f5$var$addCell() {\n    var coord = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getRandomEmptyCell, $3d28d7f1aac198f5$var$getRandomEmptyCell).call(this);\n    if (coord !== null) this.state[coord[0]][coord[1]] = Math.random() < 0.9 ? 2 : 4;\n}\nfunction $3d28d7f1aac198f5$var$getEmptyCells() {\n    var emptyCells = [];\n    for(var i = 0; i < this.state.length; i++){\n        for(var j = 0; j < this.state[0].length; j++)if (this.state[i][j] === 0) emptyCells.push([\n            i,\n            j\n        ]);\n    }\n    return emptyCells;\n}\nfunction $3d28d7f1aac198f5$var$getRandomEmptyCell() {\n    var emptyCells = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getEmptyCells, $3d28d7f1aac198f5$var$getEmptyCells).call(this);\n    if (emptyCells.length < 1) return null;\n    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n    return emptyCells[randomIndex];\n}\nfunction $3d28d7f1aac198f5$var$transpose(arr) {\n    return arr[0].map(function(_, colIndex) {\n        return arr.map(function(row) {\n            return row[colIndex];\n        });\n    });\n}\nfunction $3d28d7f1aac198f5$var$moveCellsInGroup(group) {\n    var mergedValues = [\n        0,\n        0,\n        0,\n        0\n    ];\n    for(var i = 1; i < group.length; i++){\n        if (group[i] === 0) continue;\n        var cellWithNumIndex = i;\n        var targetCellIndex = null;\n        var j = i - 1;\n        while(j >= 0 && (group[j] === 0 || group[j] === group[cellWithNumIndex] && mergedValues[j] !== 1)){\n            targetCellIndex = j;\n            j--;\n        }\n        if (targetCellIndex === null) continue;\n        if (group[targetCellIndex] === 0) {\n            group[targetCellIndex] = group[cellWithNumIndex];\n            group[cellWithNumIndex] = 0;\n        } else {\n            group[targetCellIndex] += group[cellWithNumIndex];\n            group[cellWithNumIndex] = 0;\n            mergedValues[targetCellIndex] = 1;\n            this.score += group[targetCellIndex];\n        }\n    }\n    return group;\n}\nfunction $3d28d7f1aac198f5$var$setStatus() {\n    if (!(0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_checkCanMove, $3d28d7f1aac198f5$var$checkCanMove).call(this)) this.status = $3d28d7f1aac198f5$var$Game.STATUSES.lose;\n    if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_checkWin, $3d28d7f1aac198f5$var$checkWin).call(this)) this.status = $3d28d7f1aac198f5$var$Game.STATUSES.win;\n}\nfunction $3d28d7f1aac198f5$var$checkWin() {\n    return this.state.some(function(row) {\n        return row.some(function(cell) {\n            return cell === 2048;\n        });\n    });\n}\nfunction $3d28d7f1aac198f5$var$checkCanMove() {\n    var _this = this;\n    var emptyCells = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getEmptyCells, $3d28d7f1aac198f5$var$getEmptyCells).call(this);\n    if (emptyCells.length >= 1) return true;\n    var canMoveHorisontal = this.state.some(function(row) {\n        var reversedRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, row) || (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, reversedRow)) return true;\n        return false;\n    });\n    var canMoveVertical = (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_transpose, $3d28d7f1aac198f5$var$transpose).call(this, this.state).some(function(row) {\n        var reversedRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        if ((0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, row) || (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(_this, $3d28d7f1aac198f5$var$_canMoveInGroup, $3d28d7f1aac198f5$var$canMoveInGroup).call(_this, reversedRow)) return true;\n        return false;\n    });\n    return canMoveHorisontal || canMoveVertical;\n}\nfunction $3d28d7f1aac198f5$var$canMoveInGroup(group) {\n    return group.some(function(cell, index) {\n        if (index === 0) return false;\n        if (cell === 0) return false;\n        if (group[index - 1] === 0) return true;\n        if (group[index] === group[index - 1]) return true;\n        return false;\n    });\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports($197cd56b15c33885$var$initialState, $197cd56b15c33885$var$gameField.tBodies[0], $197cd56b15c33885$var$scoreField);\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.innerText = \"Restart\";\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$button.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.innerText = \"Start\";\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n    }\n    $197cd56b15c33885$var$game.updateGameBoard();\n});\n$197cd56b15c33885$var$setupInputOnce();\nfunction $197cd56b15c33885$var$setupInputOnce() {\n    window.addEventListener(\"keydown\", $197cd56b15c33885$var$handleInput, {\n        once: true\n    });\n    $197cd56b15c33885$var$setupTouchControls();\n}\nfunction $197cd56b15c33885$var$handleInput(e) {\n    switch(e.key){\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            $197cd56b15c33885$var$setupInputOnce();\n            return;\n    }\n    $197cd56b15c33885$var$updateGame();\n}\nfunction $197cd56b15c33885$var$setupTouchControls() {\n    var touchStartX = 0;\n    var touchStartY = 0;\n    var touchEndX = 0;\n    var touchEndY = 0;\n    var threshold = 50;\n    window.addEventListener(\"touchstart\", function(e) {\n        touchStartX = e.touches[0].clientX;\n        touchStartY = e.touches[0].clientY;\n    }, {\n        once: true\n    });\n    window.addEventListener(\"touchend\", function(e) {\n        touchEndX = e.changedTouches[0].clientX;\n        touchEndY = e.changedTouches[0].clientY;\n        handleSwipe();\n    }, {\n        once: true\n    });\n    function handleSwipe() {\n        var deltaX = touchEndX - touchStartX;\n        var deltaY = touchEndY - touchStartY;\n        if (Math.abs(deltaX) > Math.abs(deltaY)) {\n            if (deltaX > threshold) $197cd56b15c33885$var$game.moveRight();\n            else if (deltaX < -threshold) $197cd56b15c33885$var$game.moveLeft();\n        } else {\n            if (deltaY > threshold) $197cd56b15c33885$var$game.moveDown();\n            else if (deltaY < -threshold) $197cd56b15c33885$var$game.moveUp();\n        }\n        $197cd56b15c33885$var$updateGame();\n    }\n}\nfunction $197cd56b15c33885$var$updateGame() {\n    $197cd56b15c33885$var$game.updateGameBoard();\n    var resultStatus = $197cd56b15c33885$var$game.getStatus();\n    if (resultStatus === $3d28d7f1aac198f5$exports.STATUSES.win) $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n    if (resultStatus === $3d28d7f1aac198f5$exports.STATUSES.lose) $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$setupInputOnce();\n}\n\n})();\n//# sourceMappingURL=index.f7e3b843.js.map\n","'use strict';\n\nconst gameField = document.querySelector('.game-field');\nconst scoreField = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst button = document.querySelector('.button');\n\nconst initialState = Array.from(\n  { length: gameField.tBodies[0].rows.length },\n  () => Array(gameField.tBodies[0].rows[0].cells.length).fill(0),\n);\n\nconst Game = require('../modules/Game.class');\nconst game = new Game(initialState, gameField.tBodies[0], scoreField);\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    game.start();\n\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n\n    startMessage.classList.add('hidden');\n  } else if (button.classList.contains('restart')) {\n    game.restart();\n\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.innerText = 'Start';\n\n    startMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  }\n\n  game.updateGameBoard();\n});\n\nsetupInputOnce();\n\nfunction setupInputOnce() {\n  window.addEventListener('keydown', handleInput, { once: true });\n  setupTouchControls();\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      setupInputOnce();\n\n      return;\n  }\n\n  updateGame();\n}\n\nfunction setupTouchControls() {\n  let touchStartX = 0;\n  let touchStartY = 0;\n  let touchEndX = 0;\n  let touchEndY = 0;\n\n  const threshold = 50;\n\n  window.addEventListener(\n    'touchstart',\n    (e) => {\n      touchStartX = e.touches[0].clientX;\n      touchStartY = e.touches[0].clientY;\n    },\n    { once: true },\n  );\n\n  window.addEventListener(\n    'touchend',\n    (e) => {\n      touchEndX = e.changedTouches[0].clientX;\n      touchEndY = e.changedTouches[0].clientY;\n\n      handleSwipe();\n    },\n    { once: true },\n  );\n\n  function handleSwipe() {\n    const deltaX = touchEndX - touchStartX;\n    const deltaY = touchEndY - touchStartY;\n\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      if (deltaX > threshold) {\n        game.moveRight();\n      } else if (deltaX < -threshold) {\n        game.moveLeft();\n      }\n    } else {\n      if (deltaY > threshold) {\n        game.moveDown();\n      } else if (deltaY < -threshold) {\n        game.moveUp();\n      }\n    }\n\n    updateGame();\n  }\n}\n\nfunction updateGame() {\n  game.updateGameBoard();\n\n  const resultStatus = game.getStatus();\n\n  if (resultStatus === Game.STATUSES.win) {\n    winMessage.classList.remove('hidden');\n  }\n\n  if (resultStatus === Game.STATUSES.lose) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  setupInputOnce();\n}\n","'use strict';\n\nclass Game {\n  static STATUSES = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n    gameBoard,\n    scoreField,\n  ) {\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n    this.status = Game.STATUSES.idle;\n    this.score = 0;\n    this.gameBoard = gameBoard;\n    this.scoreField = scoreField;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUSES.playing;\n    this.#addCell();\n    this.#addCell();\n  }\n\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n    this.status = Game.STATUSES.idle;\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.status !== Game.STATUSES.playing) {\n      return;\n    }\n\n    let canMoveLeftInGroup = false;\n\n    this.state = this.state.map((row) => {\n      if (!this.#canMoveInGroup(row)) {\n        return row;\n      }\n\n      canMoveLeftInGroup = true;\n\n      return this.#moveCellsInGroup(row);\n    });\n\n    if (canMoveLeftInGroup) {\n      this.#addCell();\n    }\n\n    this.#setStatus();\n  }\n\n  moveRight() {\n    if (this.status !== Game.STATUSES.playing) {\n      return;\n    }\n\n    let canMoveRightInGroup = false;\n\n    this.state = this.state.map((row) => {\n      const rowReversed = [...row].reverse();\n\n      if (!this.#canMoveInGroup(rowReversed)) {\n        return row;\n      }\n\n      canMoveRightInGroup = true;\n\n      return this.#moveCellsInGroup(rowReversed).reverse();\n    });\n\n    if (canMoveRightInGroup) {\n      this.#addCell();\n    }\n\n    this.#setStatus();\n  }\n\n  moveUp() {\n    if (this.status !== Game.STATUSES.playing) {\n      return;\n    }\n\n    let canMoveUpInGroup = false;\n\n    const cellsGroupByColumns = this.#transpose(this.state);\n\n    const updatedCellsGroupByColumns = cellsGroupByColumns.map((row) => {\n      if (!this.#canMoveInGroup(row)) {\n        return row;\n      }\n\n      canMoveUpInGroup = true;\n\n      return this.#moveCellsInGroup(row);\n    });\n\n    this.state = this.#transpose(updatedCellsGroupByColumns);\n\n    if (canMoveUpInGroup) {\n      this.#addCell();\n    }\n\n    this.#setStatus();\n  }\n\n  moveDown() {\n    if (this.status !== Game.STATUSES.playing) {\n      return;\n    }\n\n    let canMoveDownInGroup = false;\n\n    const cellsGroupByColumns = this.#transpose(this.state);\n\n    const updatedCellsGroupByColumns = cellsGroupByColumns.map((row) => {\n      const reversedRow = [...row].reverse();\n\n      if (!this.#canMoveInGroup(reversedRow)) {\n        return row;\n      }\n\n      canMoveDownInGroup = true;\n\n      return this.#moveCellsInGroup(reversedRow).reverse();\n    });\n\n    this.state = this.#transpose(updatedCellsGroupByColumns);\n\n    if (canMoveDownInGroup) {\n      this.#addCell();\n    }\n\n    this.#setStatus();\n  }\n\n  updateGameBoard() {\n    const regex = /field-cell--\\d+/;\n    const currState = this.getState();\n\n    this.scoreField.innerText = this.getScore();\n\n    for (let i = 0; i < currState.length; i++) {\n      for (let j = 0; j < currState.length; j++) {\n        if (currState[i][j] !== 0) {\n          this.gameBoard.rows[i].cells[j].className =\n            `field-cell field-cell--${currState[i][j]}`;\n          this.gameBoard.rows[i].cells[j].innerText = currState[i][j];\n        } else if (\n          currState[i][j] === 0 &&\n          regex.test(this.gameBoard.rows[i].cells[j].className)\n        ) {\n          this.gameBoard.rows[i].cells[j].className = 'field-cell';\n          this.gameBoard.rows[i].cells[j].innerText = '';\n        }\n      }\n    }\n  }\n\n  #addCell() {\n    const coord = this.#getRandomEmptyCell();\n\n    if (coord !== null) {\n      this.state[coord[0]][coord[1]] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  #getEmptyCells() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[0].length; j++) {\n        if (this.state[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  #getRandomEmptyCell() {\n    const emptyCells = this.#getEmptyCells();\n\n    if (emptyCells.length < 1) {\n      return null;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    return emptyCells[randomIndex];\n  }\n\n  #transpose(arr) {\n    return arr[0].map((_, colIndex) => arr.map((row) => row[colIndex]));\n  }\n\n  #moveCellsInGroup(group) {\n    const mergedValues = [0, 0, 0, 0];\n\n    for (let i = 1; i < group.length; i++) {\n      if (group[i] === 0) {\n        continue;\n      }\n\n      const cellWithNumIndex = i;\n      let targetCellIndex = null;\n      let j = i - 1;\n\n      while (\n        j >= 0 &&\n        (group[j] === 0 ||\n          (group[j] === group[cellWithNumIndex] && mergedValues[j] !== 1))\n      ) {\n        targetCellIndex = j;\n        j--;\n      }\n\n      if (targetCellIndex === null) {\n        continue;\n      }\n\n      if (group[targetCellIndex] === 0) {\n        group[targetCellIndex] = group[cellWithNumIndex];\n        group[cellWithNumIndex] = 0;\n      } else {\n        group[targetCellIndex] += group[cellWithNumIndex];\n        group[cellWithNumIndex] = 0;\n\n        mergedValues[targetCellIndex] = 1;\n\n        this.score += group[targetCellIndex];\n      }\n    }\n\n    return group;\n  }\n\n  #setStatus() {\n    if (!this.#checkCanMove()) {\n      this.status = Game.STATUSES.lose;\n    }\n\n    if (this.#checkWin()) {\n      this.status = Game.STATUSES.win;\n    }\n  }\n\n  #checkWin() {\n    return this.state.some((row) => {\n      return row.some((cell) => cell === 2048);\n    });\n  }\n\n  #checkCanMove() {\n    const emptyCells = this.#getEmptyCells();\n\n    if (emptyCells.length >= 1) {\n      return true;\n    }\n\n    const canMoveHorisontal = this.state.some((row) => {\n      const reversedRow = [...row];\n\n      if (this.#canMoveInGroup(row) || this.#canMoveInGroup(reversedRow)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    const canMoveVertical = this.#transpose(this.state).some((row) => {\n      const reversedRow = [...row];\n\n      if (this.#canMoveInGroup(row) || this.#canMoveInGroup(reversedRow)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    return canMoveHorisontal || canMoveVertical;\n  }\n\n  #canMoveInGroup(group) {\n    return group.some((cell, index) => {\n      if (index === 0) {\n        return false;\n      }\n\n      if (cell === 0) {\n        return false;\n      }\n\n      if (group[index - 1] === 0) {\n        return true;\n      }\n\n      if (group[index] === group[index - 1]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["key","value","$197cd56b15c33885$var$gameField","document","querySelector","$197cd56b15c33885$var$scoreField","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$button","$197cd56b15c33885$var$initialState","Array","from","length","tBodies","rows","cells","fill","$3d28d7f1aac198f5$exports","$ac6739cbe5bf1c84$export$71511d61b312f219","receiver","privateSet","fn","has","TypeError","$ea91727f98d0802f$export$71511d61b312f219","obj","privateCollection","add","$c3b10a83b523f372$export$71511d61b312f219","arr","len","i","arr2","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$3d28d7f1aac198f5$var$_addCell","WeakSet","$3d28d7f1aac198f5$var$_getEmptyCells","$3d28d7f1aac198f5$var$_getRandomEmptyCell","$3d28d7f1aac198f5$var$_transpose","$3d28d7f1aac198f5$var$_moveCellsInGroup","$3d28d7f1aac198f5$var$_setStatus","$3d28d7f1aac198f5$var$_checkWin","$3d28d7f1aac198f5$var$_checkCanMove","$3d28d7f1aac198f5$var$_canMoveInGroup","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","gameBoard","scoreField","instance","Constructor","state","map","row","status","STATUSES","idle","score","playing","$3d28d7f1aac198f5$var$addCell","_this","canMoveLeftInGroup","$3d28d7f1aac198f5$var$canMoveInGroup","$3d28d7f1aac198f5$var$moveCellsInGroup","$3d28d7f1aac198f5$var$setStatus","canMoveRightInGroup","rowReversed","reverse","canMoveUpInGroup","updatedCellsGroupByColumns","cellsGroupByColumns","$3d28d7f1aac198f5$var$transpose","canMoveDownInGroup","reversedRow","regex","currState","getState","innerText","getScore","j","className","concat","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","coord","$3d28d7f1aac198f5$var$getRandomEmptyCell","Math","random","$3d28d7f1aac198f5$var$getEmptyCells","emptyCells","push","randomIndex","floor","_","colIndex","group","mergedValues","cellWithNumIndex","targetCellIndex","$3d28d7f1aac198f5$var$checkCanMove","lose","$3d28d7f1aac198f5$var$checkWin","win","some","cell","canMoveHorisontal","canMoveVertical","index","$197cd56b15c33885$var$game","$197cd56b15c33885$var$setupInputOnce","touchStartX","touchStartY","touchEndX","touchEndY","window","addEventListener","$197cd56b15c33885$var$handleInput","once","e","touches","clientX","clientY","deltaX","deltaY","changedTouches","abs","moveRight","moveLeft","moveDown","moveUp","$197cd56b15c33885$var$updateGame","updateGameBoard","resultStatus","getStatus","classList","remove","contains","start","restart"],"version":3,"file":"index.f7e3b843.js.map"}